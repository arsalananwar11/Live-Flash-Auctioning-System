"""Change default_time_increment to integer and rename default_time_increment_after

Revision ID: 5e4dcc2e44a0
Revises: be08148b2b07
Create Date: 2024-11-17 21:11:03.320647

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = "5e4dcc2e44a0"
down_revision = "be08148b2b07"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto-generated by Alembic - please adjust! ###
    with op.batch_alter_table("auction", schema=None) as batch_op:
        # Step 1: Add the new 'default_time_increment_before' column as an Integer
        batch_op.add_column(
            sa.Column("default_time_increment_before", sa.Integer(), nullable=False)
        )

    # Step 2: Convert existing 'default_time_increment' and 'default_time_increment_after' values into integers
    op.execute(
        """
        UPDATE auction
        SET default_time_increment_before = CASE
            WHEN default_time_increment_after = 'seconds' THEN 1
            WHEN default_time_increment_after = 'minutes' THEN 60
            ELSE default_time_increment_after
        END
    """
    )

    with op.batch_alter_table("auction", schema=None) as batch_op:
        # Step 3: Alter 'default_time_increment' column type to Integer
        batch_op.alter_column(
            "default_time_increment",
            existing_type=mysql.ENUM("seconds", "minutes"),
            type_=sa.Integer(),
            existing_nullable=False,
        )

        # Step 4: Drop the 'default_time_increment_after' column after data conversion
        batch_op.drop_column("default_time_increment_after")

    # Update foreign keys if necessary
    with op.batch_alter_table("auction_interest", schema=None) as batch_op:
        batch_op.drop_constraint("auction_interest_ibfk_1", type_="foreignkey")
        batch_op.drop_constraint("auction_interest_ibfk_2", type_="foreignkey")
        batch_op.create_foreign_key(None, "auction", ["auction_id"], ["auction_id"])
        batch_op.create_foreign_key(None, "users", ["user_id"], ["user_id"])

    with op.batch_alter_table("auction_winner", schema=None) as batch_op:
        batch_op.drop_constraint("auction_winner_ibfk_2", type_="foreignkey")
        batch_op.drop_constraint("auction_winner_ibfk_1", type_="foreignkey")
        batch_op.create_foreign_key(None, "users", ["user_id"], ["user_id"])
        batch_op.create_foreign_key(None, "auction", ["auction_id"], ["auction_id"])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto-generated by Alembic - please adjust! ###
    with op.batch_alter_table("auction_winner", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "auction_winner_ibfk_1",
            "auction",
            ["auction_id"],
            ["auction_id"],
            ondelete="CASCADE",
        )
        batch_op.create_foreign_key(
            "auction_winner_ibfk_2",
            "users",
            ["user_id"],
            ["user_id"],
            ondelete="CASCADE",
        )

    with op.batch_alter_table("auction_interest", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "auction_interest_ibfk_2",
            "users",
            ["user_id"],
            ["user_id"],
            ondelete="CASCADE",
        )
        batch_op.create_foreign_key(
            "auction_interest_ibfk_1",
            "auction",
            ["auction_id"],
            ["auction_id"],
            ondelete="CASCADE",
        )

    with op.batch_alter_table("auction", schema=None) as batch_op:
        # Step 1: Re-add 'default_time_increment_after' as an Enum column
        batch_op.add_column(
            sa.Column(
                "default_time_increment_after",
                mysql.ENUM("seconds", "minutes"),
                nullable=False,
            )
        )

        # Step 2: Convert 'default_time_increment' back to Enum values
        op.execute(
            """
            UPDATE auction
            SET default_time_increment = CASE
                WHEN default_time_increment = 1 THEN 'seconds'
                WHEN default_time_increment = 60 THEN 'minutes'
                ELSE default_time_increment
            END
        """
        )

        # Step 3: Alter 'default_time_increment' column back to Enum type
        batch_op.alter_column(
            "default_time_increment",
            existing_type=sa.Integer(),
            type_=mysql.ENUM("seconds", "minutes"),
            existing_nullable=False,
        )

        # Step 4: Drop the 'default_time_increment_before' column
        batch_op.drop_column("default_time_increment_before")

    # ### end Alembic commands ###
